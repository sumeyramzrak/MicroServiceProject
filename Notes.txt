* Öncelikle powershell üzerinden bir solution oluþturduk 
	- Proje oluþturulacak path e git
		cd <Path>
	- Proje klasörü oluþtur.
		mkdir E-SourcingMicroService
	- Solution ekle
		dotnet new sln
	- Webapi projesi ekle
		dotnet new webapi -o ESourcing.Products
	- WebApi ye sln ekle
		dotnet sln add ESourcing.Products
 
* Microservis oluþturduk bu oluþturduðumuz microservis birden fazla olacak. Bu servisler apigateway ile sonuçlarýný webapp e getirecek. Web appde de uý katmanýnda sonuçlar gösterilecek. 

* Docker üzerinden mongodb pull edildi.
	-docker pull mongo
	-docker run -d -p 27017:27017 --name sourcingdb mongo

* Appsetting.json dosyasýnda database baðlantý bilgileri eklendi.
* Db baðlantý bilgilerini kullanabilmemiz için setting klasörü altýnda IProductDatabaseSettings,ProductDatabaseSettings oluþturuldu.
* MongoDb bilgilerini eriþebilmek için Program.cs dosyasýnda configuration eklendi.

------------------DOCKERIZE-------------------------

docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d 
docker-compose up --build -d :  her þeyi build edip projeyi öyle oluþturur.
docker-compose down : containerlarý siler.
