* Öncelikle powershell üzerinden bir solution oluþturduk 
	- Proje oluþturulacak path e git
		cd <Path>
	- Proje klasörü oluþtur.
		mkdir E-SourcingMicroService
	- Solution ekle
		dotnet new sln
	- Webapi projesi ekle
		dotnet new webapi -o ESourcing.Products
	- WebApi ye sln ekle
		dotnet sln add ESourcing.Products
 
* Microservis oluþturduk bu oluþturduðumuz microservis birden fazla olacak. Bu servisler apigateway ile sonuçlarýný webapp e getirecek. Web appde de uý katmanýnda sonuçlar gösterilecek. 

* Docker üzerinden mongodb pull edildi.
	-docker pull mongo
	-docker run -d -p 27017:27017 --name sourcingdb mongo

* Appsetting.json dosyasýnda database baðlantý bilgileri eklendi.
* Db baðlantý bilgilerini kullanabilmemiz için setting klasörü altýnda IProductDatabaseSettings,ProductDatabaseSettings oluþturuldu.
* MongoDb bilgilerini eriþebilmek için Program.cs dosyasýnda configuration eklendi.

------------------DOCKERIZE-------------------------
!!docker composeun bulunduðu pathde çalýþtýrýlacak cmdde !!
docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d 
docker-compose up --build -d :  her þeyi build edip projeyi öyle oluþturur.
docker-compose down : containerlarý siler.

* Proje üzerine sað týklayýp Add --> Docker Support dediðimizde proje altýnda bir dockerfile oluþturuyor.
  - Eklenen docker file sadece ilgili projeyi kapsar. Bu projenin contenarize olmasýný saðlar.
  - Docker compose üzerinden ayaða kaldýrdýðmýzda bu docker file ýn bir anlamý olmayacaktýr.
  - Oluþturulan dockerfile 2 image üzerinden beslenir.
	1) Build için
	2) Runtimeda projeyi çalýþtýrmak için
  - Dockerfile projenin image oluþmasýndan sorumlu komutlarý barýndýrýr.
  - Docker compose için dockerfile da ne yazdýðýnýn bir önemi yok

* Docker-Volume
  # Image üzerinden bir container oluþturduðumuzda container üzerinde yapýlan deðiþiklikler container yaþarken devam edecektir fakat kill olduðunda deðiþiklikler yok olacaktýr. 
  # Volume sayesinde bir önceki kill olan containera kadar olan deðiþiklikler, datalar saklanýr.

------------------RABBIT MQ-------------------------
 docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 rabbitmq:3-management
container ayaða kalktýktan sonra http://localhost:15672/ adresi üzerinden kullanýcý adý:guest / password: guest olarak giriþ yapýp servisleri tooldan inceleyebiliriz.